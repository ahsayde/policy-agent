name: build

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}

      - name: setup go
        uses: actions/setup-go@v3
        with:
          go-version: '1.19'
          cache: true

      - name: Get branch name (merge)
        if: github.event_name != 'pull_request'
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Get branch name (pull request)
        if: github.event_name == 'pull_request'
        run: |
          git fetch -a
          echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV

      - name: Build binary
        run: |
          make build

      - name: Running ElasticSearch
        run: |
          docker run -itd --name elasticsearch -p 9200:9200 -e "discovery.type=single-node" -e "xpack.security.enabled=false" docker.elastic.co/elasticsearch/elasticsearch:8.3.3
          sleep 20
          timeout 120 sh -c 'until nc -z $0 $1; do echo "waiting for elasticsearch to start on port 9200"; sleep 5; done' localhost 9200

      - name: run test
        env:
          CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}
        run: |
          make test
          bash <(curl -s https://codecov.io/bash) -F unit

      - name: Build dev docker image
        run: |
          COMMIT_COUNT=$(git rev-list --count HEAD)
          SHORT_HASH=$(git rev-parse --short HEAD)
          VERSION=${{ env.BRANCH_NAME }}-${COMMIT_COUNT}-${SHORT_HASH}

          if [[ ${{ env.BRANCH_NAME }} == "dev" ]]; then
            export VERSION=dev
          fi

          make image VERSION=$VERSION

      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/dev'
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}


      - name: Create dev image and push to Docker Registry
        if: github.ref == 'refs/heads/dev'
        run: |
          if [[ ${{ env.BRANCH_NAME }} == "dev" ]]; then
            export VERSION=dev
          fi

          make push@weaveworks tag-file=new-tag version-file=new-version VERSION=$VERSION
