// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/MagalixTechnologies/policy-core/domain (interfaces: PoliciesSource)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	domain "github.com/MagalixTechnologies/policy-core/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockPoliciesSource is a mock of PoliciesSource interface.
type MockPoliciesSource struct {
	ctrl     *gomock.Controller
	recorder *MockPoliciesSourceMockRecorder
}

// MockPoliciesSourceMockRecorder is the mock recorder for MockPoliciesSource.
type MockPoliciesSourceMockRecorder struct {
	mock *MockPoliciesSource
}

// NewMockPoliciesSource creates a new mock instance.
func NewMockPoliciesSource(ctrl *gomock.Controller) *MockPoliciesSource {
	mock := &MockPoliciesSource{ctrl: ctrl}
	mock.recorder = &MockPoliciesSourceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPoliciesSource) EXPECT() *MockPoliciesSourceMockRecorder {
	return m.recorder
}

// GetAll mocks base method.
func (m *MockPoliciesSource) GetAll(arg0 context.Context) ([]domain.Policy, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", arg0)
	ret0, _ := ret[0].([]domain.Policy)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockPoliciesSourceMockRecorder) GetAll(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockPoliciesSource)(nil).GetAll), arg0)
}

// GetPolicyConfig mocks base method.
func (m *MockPoliciesSource) GetPolicyConfig(arg0 context.Context, arg1 domain.Entity) (*domain.PolicyConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPolicyConfig", arg0, arg1)
	ret0, _ := ret[0].(*domain.PolicyConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPolicyConfig indicates an expected call of GetPolicyConfig.
func (mr *MockPoliciesSourceMockRecorder) GetPolicyConfig(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPolicyConfig", reflect.TypeOf((*MockPoliciesSource)(nil).GetPolicyConfig), arg0, arg1)
}
