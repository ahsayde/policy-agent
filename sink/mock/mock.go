// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/MagalixCorp/magalix-policy-agent/pkg/domain (interfaces: ValidationResultSink)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	domain "github.com/MagalixCorp/magalix-policy-agent/pkg/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockValidationResultSink is a mock of ValidationResultSink interface.
type MockValidationResultSink struct {
	ctrl     *gomock.Controller
	recorder *MockValidationResultSinkMockRecorder
}

// MockValidationResultSinkMockRecorder is the mock recorder for MockValidationResultSink.
type MockValidationResultSinkMockRecorder struct {
	mock *MockValidationResultSink
}

// NewMockValidationResultSink creates a new mock instance.
func NewMockValidationResultSink(ctrl *gomock.Controller) *MockValidationResultSink {
	mock := &MockValidationResultSink{ctrl: ctrl}
	mock.recorder = &MockValidationResultSinkMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockValidationResultSink) EXPECT() *MockValidationResultSinkMockRecorder {
	return m.recorder
}

// Write mocks base method.
func (m *MockValidationResultSink) Write(arg0 context.Context, arg1 []domain.ValidationResult) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Write", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Write indicates an expected call of Write.
func (mr *MockValidationResultSinkMockRecorder) Write(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Write", reflect.TypeOf((*MockValidationResultSink)(nil).Write), arg0, arg1)
}
